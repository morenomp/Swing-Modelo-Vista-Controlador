package View;

import Controller.Controlador;
import static Controller.Controlador.getPlanetByName;
import Model.*;
import java.awt.*;
import javax.swing.JOptionPane;

/**
 *
 * @author MarcMorenoPineda
 */
public class createBeing extends javax.swing.JDialog {

    
    /**
     * Creates new form createBeing
     */
    
    /**
     * -------------------
     * PANELES INVISIBLES
     * -------------------
     * 
     * El estado inicial de todos los paneles será invisible. Ya que haremos que
     * el usuario solo pueda seleccionar uno a la vez. De esta forma evitamos 
     * posibles errores.
     * 
     * @param parent
     * @param modal 
     */
    public createBeing(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        //Cambiar color de fondo
        getContentPane().setBackground(new Color(0, 24, 78));
        
        //le diremos que por defecto todos los JPanels no sean visibles
        humanoBeing.setVisible(false);
        ferengiBeing.setVisible(false);
        andorianoBeing.setVisible(false);
        klingonBeing.setVisible(false);
        vulcanianoBeing.setVisible(false);
        nibirianoBeing.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel3 = new javax.swing.JLabel();
        cancelCreateBeing = new javax.swing.JButton();
        saveCreatePlanet2 = new javax.swing.JButton();
        humanoBeing = new javax.swing.JPanel();
        text9 = new javax.swing.JLabel();
        text11 = new javax.swing.JLabel();
        text10 = new javax.swing.JLabel();
        EdadBeing = new javax.swing.JSpinner();
        text16 = new javax.swing.JLabel();
        GeneroBeing1 = new javax.swing.JComboBox<>();
        andorianoBeing = new javax.swing.JPanel();
        text1 = new javax.swing.JLabel();
        text4 = new javax.swing.JLabel();
        text3 = new javax.swing.JLabel();
        PolosBeing1 = new javax.swing.JRadioButton();
        RangoBeing = new javax.swing.JComboBox<>();
        vulcanianoBeing = new javax.swing.JPanel();
        text17 = new javax.swing.JLabel();
        text19 = new javax.swing.JLabel();
        text18 = new javax.swing.JLabel();
        MeditacionBeing2 = new javax.swing.JSpinner();
        nibirianoBeing = new javax.swing.JPanel();
        text6 = new javax.swing.JLabel();
        text8 = new javax.swing.JLabel();
        text12 = new javax.swing.JLabel();
        AlimentacionBeing = new javax.swing.JComboBox<>();
        klingonBeing = new javax.swing.JPanel();
        text20 = new javax.swing.JLabel();
        text22 = new javax.swing.JLabel();
        text21 = new javax.swing.JLabel();
        FuerzaBeing = new javax.swing.JSpinner();
        ferengiBeing = new javax.swing.JPanel();
        text23 = new javax.swing.JLabel();
        text24 = new javax.swing.JLabel();
        text25 = new javax.swing.JLabel();
        OroBeing1 = new javax.swing.JSpinner();
        humanButton = new javax.swing.JButton();
        vulcanianoButton = new javax.swing.JButton();
        andorianoButton = new javax.swing.JButton();
        nibirianoButton = new javax.swing.JButton();
        klingonButton = new javax.swing.JButton();
        ferengiButton = new javax.swing.JButton();
        nameBeing = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        PlanetaBeing = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });

        jLabel3.setFont(new java.awt.Font("Roboto Black", 1, 24)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/createBeingTitle.jpg"))); // NOI18N

        cancelCreateBeing.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        cancelCreateBeing.setForeground(new java.awt.Color(255, 0, 0));
        cancelCreateBeing.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/salir.png"))); // NOI18N
        cancelCreateBeing.setBorder(null);
        cancelCreateBeing.setContentAreaFilled(false);
        cancelCreateBeing.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cancelCreateBeing.setOpaque(true);
        cancelCreateBeing.setPreferredSize(new java.awt.Dimension(446, 109));
        cancelCreateBeing.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelCreateBeingActionPerformed(evt);
            }
        });

        saveCreatePlanet2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        saveCreatePlanet2.setForeground(new java.awt.Color(0, 153, 255));
        saveCreatePlanet2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/guardar.png"))); // NOI18N
        saveCreatePlanet2.setBorder(null);
        saveCreatePlanet2.setContentAreaFilled(false);
        saveCreatePlanet2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        saveCreatePlanet2.setOpaque(true);
        saveCreatePlanet2.setPreferredSize(new java.awt.Dimension(446, 109));
        saveCreatePlanet2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveCreatePlanet2ActionPerformed(evt);
            }
        });

        humanoBeing.setBackground(new java.awt.Color(255, 255, 255));
        humanoBeing.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 102), 3, true));
        humanoBeing.setPreferredSize(new java.awt.Dimension(300, 158));

        text9.setFont(new java.awt.Font("Space Bd BT", 1, 14)); // NOI18N
        text9.setText("Humano:");

        text11.setFont(new java.awt.Font("Space Bd BT", 0, 12)); // NOI18N
        text11.setText("Introduzca los parámetros de su Ser:");

        text10.setFont(new java.awt.Font("Space Bd BT", 0, 12)); // NOI18N
        text10.setText("Edad");

        EdadBeing.setFont(new java.awt.Font("Space Bd BT", 0, 12)); // NOI18N
        EdadBeing.setModel(new javax.swing.SpinnerNumberModel(1, 1, 100, 1));

        text16.setFont(new java.awt.Font("Space Bd BT", 0, 12)); // NOI18N
        text16.setText("Género");

        GeneroBeing1.setFont(new java.awt.Font("Space Bd BT", 0, 12)); // NOI18N
        GeneroBeing1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Masculino", "Femenino" }));
        GeneroBeing1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GeneroBeing1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout humanoBeingLayout = new javax.swing.GroupLayout(humanoBeing);
        humanoBeing.setLayout(humanoBeingLayout);
        humanoBeingLayout.setHorizontalGroup(
            humanoBeingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(humanoBeingLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(humanoBeingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(text9)
                    .addComponent(text11)
                    .addGroup(humanoBeingLayout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addGroup(humanoBeingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(GeneroBeing1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(EdadBeing)
                            .addGroup(humanoBeingLayout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(text10))
                            .addGroup(humanoBeingLayout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(text16)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        humanoBeingLayout.setVerticalGroup(
            humanoBeingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(humanoBeingLayout.createSequentialGroup()
                .addComponent(text9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(text11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(text10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(EdadBeing, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(text16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(GeneroBeing1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );

        andorianoBeing.setBackground(new java.awt.Color(255, 255, 255));
        andorianoBeing.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 102), 3, true));
        andorianoBeing.setPreferredSize(new java.awt.Dimension(300, 158));

        text1.setFont(new java.awt.Font("Space Bd BT", 1, 14)); // NOI18N
        text1.setText("Andoriano:");

        text4.setFont(new java.awt.Font("Space Bd BT", 0, 12)); // NOI18N
        text4.setText("Introduzca los parámetros de su Ser:");

        text3.setFont(new java.awt.Font("Space Bd BT", 0, 12)); // NOI18N
        text3.setText("Rango");

        PolosBeing1.setFont(new java.awt.Font("Space Bd BT", 0, 12)); // NOI18N
        PolosBeing1.setText("SI vive en los polos");
        PolosBeing1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PolosBeing1ActionPerformed(evt);
            }
        });

        RangoBeing.setFont(new java.awt.Font("Space Bd BT", 0, 12)); // NOI18N
        RangoBeing.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Entrenador", "Defensor", "Luchador", "Caballero" }));

        javax.swing.GroupLayout andorianoBeingLayout = new javax.swing.GroupLayout(andorianoBeing);
        andorianoBeing.setLayout(andorianoBeingLayout);
        andorianoBeingLayout.setHorizontalGroup(
            andorianoBeingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(andorianoBeingLayout.createSequentialGroup()
                .addGroup(andorianoBeingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(andorianoBeingLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(andorianoBeingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(text1)
                            .addComponent(text4)))
                    .addGroup(andorianoBeingLayout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addGroup(andorianoBeingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(RangoBeing, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(andorianoBeingLayout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(text3))))
                    .addGroup(andorianoBeingLayout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(PolosBeing1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        andorianoBeingLayout.setVerticalGroup(
            andorianoBeingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(andorianoBeingLayout.createSequentialGroup()
                .addComponent(text1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(text4)
                .addGap(18, 18, 18)
                .addComponent(text3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RangoBeing, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(PolosBeing1)
                .addContainerGap(8, Short.MAX_VALUE))
        );

        vulcanianoBeing.setBackground(new java.awt.Color(255, 255, 255));
        vulcanianoBeing.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 102), 3, true));
        vulcanianoBeing.setPreferredSize(new java.awt.Dimension(300, 158));

        text17.setFont(new java.awt.Font("Space Bd BT", 1, 14)); // NOI18N
        text17.setText("Vulcaniano:");

        text19.setFont(new java.awt.Font("Space Bd BT", 0, 12)); // NOI18N
        text19.setText("Introduzca los parámetros de su Ser:");

        text18.setFont(new java.awt.Font("Space Bd BT", 0, 12)); // NOI18N
        text18.setText("Nivel de meditación");

        MeditacionBeing2.setFont(new java.awt.Font("Space Bd BT", 0, 12)); // NOI18N
        MeditacionBeing2.setModel(new javax.swing.SpinnerNumberModel(1, 1, 10, 1));

        javax.swing.GroupLayout vulcanianoBeingLayout = new javax.swing.GroupLayout(vulcanianoBeing);
        vulcanianoBeing.setLayout(vulcanianoBeingLayout);
        vulcanianoBeingLayout.setHorizontalGroup(
            vulcanianoBeingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(vulcanianoBeingLayout.createSequentialGroup()
                .addGroup(vulcanianoBeingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(vulcanianoBeingLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(vulcanianoBeingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(text19)
                            .addComponent(text17)))
                    .addGroup(vulcanianoBeingLayout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addGroup(vulcanianoBeingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(vulcanianoBeingLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(MeditacionBeing2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(text18))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        vulcanianoBeingLayout.setVerticalGroup(
            vulcanianoBeingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(vulcanianoBeingLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(text17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(text19)
                .addGap(18, 18, 18)
                .addComponent(text18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MeditacionBeing2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        nibirianoBeing.setBackground(new java.awt.Color(255, 255, 255));
        nibirianoBeing.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 102), 3, true));
        nibirianoBeing.setPreferredSize(new java.awt.Dimension(300, 158));

        text6.setFont(new java.awt.Font("Space Bd BT", 1, 14)); // NOI18N
        text6.setText("Nibiriano:");

        text8.setFont(new java.awt.Font("Space Bd BT", 0, 12)); // NOI18N
        text8.setText("Introduzca los parámetros de su Ser:");

        text12.setFont(new java.awt.Font("Space Bd BT", 0, 12)); // NOI18N
        text12.setText("Alimentación");

        AlimentacionBeing.setFont(new java.awt.Font("Space Bd BT", 0, 12)); // NOI18N
        AlimentacionBeing.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Flora", "Peces" }));
        AlimentacionBeing.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AlimentacionBeingActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout nibirianoBeingLayout = new javax.swing.GroupLayout(nibirianoBeing);
        nibirianoBeing.setLayout(nibirianoBeingLayout);
        nibirianoBeingLayout.setHorizontalGroup(
            nibirianoBeingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(nibirianoBeingLayout.createSequentialGroup()
                .addGroup(nibirianoBeingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(nibirianoBeingLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(nibirianoBeingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(text8)
                            .addComponent(text6)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, nibirianoBeingLayout.createSequentialGroup()
                                .addComponent(AlimentacionBeing, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37))))
                    .addGroup(nibirianoBeingLayout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addComponent(text12)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        nibirianoBeingLayout.setVerticalGroup(
            nibirianoBeingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(nibirianoBeingLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(text6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(text8)
                .addGap(18, 18, 18)
                .addComponent(text12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AlimentacionBeing, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        klingonBeing.setBackground(new java.awt.Color(255, 255, 255));
        klingonBeing.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 102), 3, true));
        klingonBeing.setPreferredSize(new java.awt.Dimension(300, 158));

        text20.setFont(new java.awt.Font("Space Bd BT", 1, 14)); // NOI18N
        text20.setText("Klingon:");

        text22.setFont(new java.awt.Font("Space Bd BT", 0, 12)); // NOI18N
        text22.setText("Introduzca los parámetros de su Ser:");

        text21.setFont(new java.awt.Font("Space Bd BT", 0, 12)); // NOI18N
        text21.setText("Nivel de fuerza");

        FuerzaBeing.setFont(new java.awt.Font("Space Bd BT", 0, 12)); // NOI18N
        FuerzaBeing.setModel(new javax.swing.SpinnerNumberModel(1, 1, 10, 1));

        javax.swing.GroupLayout klingonBeingLayout = new javax.swing.GroupLayout(klingonBeing);
        klingonBeing.setLayout(klingonBeingLayout);
        klingonBeingLayout.setHorizontalGroup(
            klingonBeingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(klingonBeingLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(klingonBeingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(text22)
                    .addComponent(text20)
                    .addGroup(klingonBeingLayout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addGroup(klingonBeingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(FuerzaBeing, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(text21, javax.swing.GroupLayout.Alignment.LEADING))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        klingonBeingLayout.setVerticalGroup(
            klingonBeingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(klingonBeingLayout.createSequentialGroup()
                .addComponent(text20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(text22)
                .addGap(18, 18, 18)
                .addComponent(text21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(FuerzaBeing, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        ferengiBeing.setBackground(new java.awt.Color(255, 255, 255));
        ferengiBeing.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 102), 3, true));
        ferengiBeing.setPreferredSize(new java.awt.Dimension(300, 158));

        text23.setFont(new java.awt.Font("Space Bd BT", 1, 14)); // NOI18N
        text23.setText("Ferengi:");

        text24.setFont(new java.awt.Font("Space Bd BT", 0, 12)); // NOI18N
        text24.setText("Introduzca los parámetros de su Ser:");

        text25.setFont(new java.awt.Font("Space Bd BT", 0, 12)); // NOI18N
        text25.setText("Cantidad de oro");

        OroBeing1.setFont(new java.awt.Font("Space Bd BT", 0, 12)); // NOI18N
        OroBeing1.setModel(new javax.swing.SpinnerNumberModel(0, null, 100, 10));

        javax.swing.GroupLayout ferengiBeingLayout = new javax.swing.GroupLayout(ferengiBeing);
        ferengiBeing.setLayout(ferengiBeingLayout);
        ferengiBeingLayout.setHorizontalGroup(
            ferengiBeingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ferengiBeingLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ferengiBeingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(text23)
                    .addComponent(text24)
                    .addGroup(ferengiBeingLayout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addGroup(ferengiBeingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(text25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(OroBeing1))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        ferengiBeingLayout.setVerticalGroup(
            ferengiBeingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ferengiBeingLayout.createSequentialGroup()
                .addComponent(text23)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(text24)
                .addGap(18, 18, 18)
                .addComponent(text25)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(OroBeing1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        humanButton.setFont(new java.awt.Font("Space Bd BT", 0, 14)); // NOI18N
        humanButton.setText("Humano");
        humanButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        humanButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                humanButtonActionPerformed(evt);
            }
        });

        vulcanianoButton.setFont(new java.awt.Font("Space Bd BT", 0, 14)); // NOI18N
        vulcanianoButton.setText("Vulcaniano");
        vulcanianoButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        vulcanianoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vulcanianoButtonActionPerformed(evt);
            }
        });

        andorianoButton.setFont(new java.awt.Font("Space Bd BT", 0, 14)); // NOI18N
        andorianoButton.setText("Andoriano");
        andorianoButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        andorianoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                andorianoButtonActionPerformed(evt);
            }
        });

        nibirianoButton.setFont(new java.awt.Font("Space Bd BT", 0, 14)); // NOI18N
        nibirianoButton.setText("Nibiriano");
        nibirianoButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        nibirianoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nibirianoButtonActionPerformed(evt);
            }
        });

        klingonButton.setFont(new java.awt.Font("Space Bd BT", 0, 14)); // NOI18N
        klingonButton.setText("Klingon");
        klingonButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        klingonButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                klingonButtonActionPerformed(evt);
            }
        });

        ferengiButton.setFont(new java.awt.Font("Space Bd BT", 0, 14)); // NOI18N
        ferengiButton.setText("Ferengi");
        ferengiButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ferengiButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ferengiButtonActionPerformed(evt);
            }
        });

        nameBeing.setFont(new java.awt.Font("Space Bd BT", 0, 12)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Space Bd BT", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Nombre del Ser:");

        jLabel2.setFont(new java.awt.Font("Space Bd BT", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Planeta del Ser:");

        PlanetaBeing.setFont(new java.awt.Font("Space Bd BT", 0, 12)); // NOI18N
        PlanetaBeing.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PlanetaBeingActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Roboto Black", 1, 24)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/final startucom.jpg"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(149, 149, 149)
                        .addComponent(humanButton, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17)
                        .addComponent(vulcanianoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addComponent(andorianoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(klingonButton, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(nibirianoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(ferengiButton, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(90, 90, 90)
                            .addComponent(saveCreatePlanet2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(cancelCreateBeing, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jLabel4)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(402, 402, 402)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(nameBeing, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(PlanetaBeing, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2)))
                            .addComponent(humanoBeing, javax.swing.GroupLayout.DEFAULT_SIZE, 274, Short.MAX_VALUE)
                            .addComponent(andorianoBeing, javax.swing.GroupLayout.DEFAULT_SIZE, 274, Short.MAX_VALUE)
                            .addComponent(vulcanianoBeing, javax.swing.GroupLayout.DEFAULT_SIZE, 274, Short.MAX_VALUE)
                            .addComponent(nibirianoBeing, javax.swing.GroupLayout.DEFAULT_SIZE, 274, Short.MAX_VALUE)
                            .addComponent(klingonBeing, javax.swing.GroupLayout.DEFAULT_SIZE, 274, Short.MAX_VALUE)
                            .addComponent(ferengiBeing, javax.swing.GroupLayout.DEFAULT_SIZE, 274, Short.MAX_VALUE))))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(humanButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(vulcanianoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(andorianoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(klingonButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ferengiButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(nibirianoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nameBeing, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PlanetaBeing, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(humanoBeing, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(andorianoBeing, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(vulcanianoBeing, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nibirianoBeing, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(klingonBeing, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ferengiBeing, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(saveCreatePlanet2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelCreateBeing, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AlimentacionBeingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AlimentacionBeingActionPerformed

    }//GEN-LAST:event_AlimentacionBeingActionPerformed

    private void PolosBeing1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PolosBeing1ActionPerformed

    }//GEN-LAST:event_PolosBeing1ActionPerformed

    private void GeneroBeing1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GeneroBeing1ActionPerformed
               
    }//GEN-LAST:event_GeneroBeing1ActionPerformed

    /**
     * --------------------
     * SALIR DE LA VENTANA
     * --------------------
     * 
     * Usaremos la propiedad dispose() para cerrar la ventana actual
     * 
     * @param evt 
     */
    private void cancelCreateBeingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelCreateBeingActionPerformed
 
        //Cerraremos la ventana actual
        dispose();
    }//GEN-LAST:event_cancelCreateBeingActionPerformed

    
    /**
     * -------------
     * CREAR SER
     * -------------
     * 
     * Crea un nuevo ser en el universo y lo asigna a un planeta existente
     * 
     * Primero verifica si hay planetas creados en la lista allPlanet. Tras esto
     * solicita al usuario que introduzca un nombre para el ser y selecciona 
     * una especie, y de ellas sus caracteristicas unicas:
     * 
     *      1. Humano (edad, genero)
     *      2. Vulcaniano (nivel de meditacion)
     *      3. Andoriano (rango, vive en los polos)
     *      4. Nibiriano (alimentacion: flora o peces)
     *      5. Klingon (nivel de fuerza)
     *      6. Ferengi (cantidad de oro)
     * 
     * Finalmente, el usuario elige un planeta donde poner al ser. 
     * 
     * @param evt 
     */
    private void saveCreatePlanet2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveCreatePlanet2ActionPerformed

        //
        try {

            System.out.println("[createBeing] nada seleccionado, try");
            
        //HUMANOS
            //si al darle a "save" el panel de humano es visible, almacenará esos datos
            if (humanoBeing.isVisible()) {
                
                System.out.println("[createBeing] humano seleccionado");
                
                //inicializaremos las variables:
                String name = nameBeing.getText();
                int edad = (int) EdadBeing.getValue();
                String genero = (String) GeneroBeing1.getSelectedItem();
                String planetName = (String) PlanetaBeing.getSelectedItem();
                
                //lo guardaremos y verificaremos si existe
                Planeta planetV = getPlanetByName(new Planeta(planetName));
                
                Humano h = new Humano(edad, genero, name);
                
                System.out.println("[createBeing] entrada a validacion");
                
                // Revisaremos/verificaremos que el ser correspondiente se puede
                // crear correctamente
                if(Controlador.validateBeingAndPlanet(h, planetV)){
            
                    planetV.getPopulation().add(h);

                    System.out.println("[createBeing] validacion, correcta");
                    
                    //hacemos que salte el mensaje conforme se ha añadido correctamente
                    JOptionPane.showMessageDialog(this, "[ OK ] Ser " + h.getName() + " añadido correctamente", "Ser creado", JOptionPane.INFORMATION_MESSAGE);
                    
                    System.out.println("[createBeing] validacion, final");
                    
                } else{
                    
                    System.out.println("[createBeing] ser no creado, else");
                    
                    // SI no se puede crear, saltará un mensaje de error
                    JOptionPane.showMessageDialog(this, "[ X ] Ser " + h.getName() + " no se añadió correctamente", "Ser no creado", JOptionPane.ERROR_MESSAGE);
                
                    throw new SerException("[ X ] El ser " + h.getName() + " no es compatible con el planeta asignado");

                }
            }
                
        //ANDORIANOS
            //si al darle a "save" el panel de andoriano es visible, almacenará esos datos
            if (andorianoBeing.isVisible()) {
                
                System.out.println("[createBeing] andoriano seleccionado");
                
                //inicializaremos las variables:
                String name = nameBeing.getText();
                String range = (String) RangoBeing.getSelectedItem();
                boolean iceAtThePoles = PolosBeing1.isSelected();
                String planetName = (String) PlanetaBeing.getSelectedItem();
                
                //lo guardaremos y verificaremos si existe
                Planeta planetV = getPlanetByName(new Planeta(planetName));
                
                Andoriano a = new Andoriano(range, iceAtThePoles, name);
                
                System.out.println("[createBeing] entrada a validacion");
                
                // Revisaremos/verificaremos que el ser correspondiente se puede
                // crear correctamente
                if(Controlador.validateBeingAndPlanet(a, planetV)){
            
                    planetV.getPopulation().add(a);

                    System.out.println("[createBeing] validacion, correcta");
                    
                    //hacemos que salte el mensaje conforme se ha añadido correctamente
                    JOptionPane.showMessageDialog(this, "[ OK ] Ser " + a.getName() + " añadido correctamente", "Ser creado", JOptionPane.INFORMATION_MESSAGE);
                    
                    System.out.println("[createBeing] validacion, final");
                    
                } else{
                    
                    System.out.println("[createBeing] ser no creado, else");
                    
                    // SI no se puede crear, saltará un mensaje de error
                    JOptionPane.showMessageDialog(this, "[ X ] Ser " + a.getName() + " no se añadió correctamente", "Ser no creado", JOptionPane.ERROR_MESSAGE);
                
                    throw new SerException("[ X ] El ser " + a.getName() + " no es compatible con el planeta asignado");
                }
            }
        
        //VULCANIANO
            //si al darle a "save" el panel de vulcaniano es visible, almacenará esos datos
            if (vulcanianoBeing.isVisible()) {
                
                System.out.println("[createBeing] vulcaniano seleccionado");
                
                //inicializaremos las variables:
                String name = nameBeing.getText();
                int meditation = (int) MeditacionBeing2.getValue();
                String planetName = (String) PlanetaBeing.getSelectedItem();
                
                //lo guardaremos y verificaremos si existe
                Planeta planetV = getPlanetByName(new Planeta(planetName));
                
                Vulcaniano v = new Vulcaniano(meditation, name);
                
                System.out.println("[createBeing] entrada a validacion");
                
                // Revisaremos/verificaremos que el ser correspondiente se puede
                // crear correctamente
                if(Controlador.validateBeingAndPlanet(v, planetV)){
            
                    planetV.getPopulation().add(v);

                    System.out.println("[createBeing] validacion, correcta");
                    
                    //hacemos que salte el mensaje conforme se ha añadido correctamente
                    JOptionPane.showMessageDialog(this, "[ OK ] Ser " + v.getName() + " añadido correctamente", "Ser creado", JOptionPane.INFORMATION_MESSAGE);
                    
                    System.out.println("[createBeing] validacion, final");
                    
                } else{
                    
                    System.out.println("[createBeing] ser no creado, else");
                    
                    // SI no se puede crear, saltará un mensaje de error
                    JOptionPane.showMessageDialog(this, "[ X ] Ser " + v.getName() + " no se añadió correctamente", "Ser no creado", JOptionPane.ERROR_MESSAGE);
                
                    throw new SerException("[ X ] El ser " + v.getName() + " no es compatible con el planeta asignado");
                }
            }
        
        //NIBIRIANO
            //si al darle a "save" el panel de nibiriano es visible, almacenará esos datos
            if (nibirianoBeing.isVisible()) {
                
                System.out.println("[createBeing] nibiriano seleccionado");
                
                //inicializaremos las variables:
                String name = nameBeing.getText();
                String floraOrFish = (String) AlimentacionBeing.getSelectedItem();
                String planetName = (String) PlanetaBeing.getSelectedItem();
                
                //lo guardaremos y verificaremos si existe
                Planeta planetV = getPlanetByName(new Planeta(planetName));
                
                Nibiriano n = new Nibiriano(floraOrFish, name);
                
                System.out.println("[createBeing] entrada a validacion");
                
                // Revisaremos/verificaremos que el ser correspondiente se puede
                // crear correctamente
                if(Controlador.validateBeingAndPlanet(n, planetV)){
            
                    planetV.getPopulation().add(n);

                    System.out.println("[createBeing] validacion, correcta");
                    
                    //hacemos que salte el mensaje conforme se ha añadido correctamente
                    JOptionPane.showMessageDialog(this, "[ OK ] Ser " + n.getName() + " añadido correctamente", "Ser creado", JOptionPane.INFORMATION_MESSAGE);
                    
                    System.out.println("[createBeing] validacion, final");
                    
                } else{
                    
                    System.out.println("[createBeing] ser no creado, else");
                    
                    // SI no se puede crear, saltará un mensaje de error
                    JOptionPane.showMessageDialog(this, "[ X ] Ser " + n.getName() + " no se añadió correctamente", "Ser no creado", JOptionPane.ERROR_MESSAGE);
                
                    throw new SerException("[ X ] El ser " + n.getName() + " no es compatible con el planeta asignado");
                }
            }
            
        //KLINGONIANO
            //si al darle a "save" el panel de klingon es visible, almacenará esos datos
            if (klingonBeing.isVisible()) {
                
                System.out.println("[createBeing] klingon seleccionado");
                
                //inicializaremos las variables:
                String name = nameBeing.getText();
                int force = (int) FuerzaBeing.getValue();
                String planetName = (String) PlanetaBeing.getSelectedItem();
                
                //lo guardaremos y verificaremos si existe
                Planeta planetV = getPlanetByName(new Planeta(planetName));
                
                Klingon k = new Klingon(force, name);
                
                System.out.println("[createBeing] entrada a validacion");
                
                // Revisaremos/verificaremos que el ser correspondiente se puede
                // crear correctamente
                if(Controlador.validateBeingAndPlanet(k, planetV)){
            
                    planetV.getPopulation().add(k);

                    System.out.println("[createBeing] validacion, correcta");
                    
                    //hacemos que salte el mensaje conforme se ha añadido correctamente
                    JOptionPane.showMessageDialog(this, "[ OK ] Ser " + k.getName() + " añadido correctamente", "Ser creado", JOptionPane.INFORMATION_MESSAGE);
                    
                    System.out.println("[createBeing] validacion, final");
                    
                } else{
                    
                    System.out.println("[createBeing] ser no creado, else");
                    
                    // SI no se puede crear, saltará un mensaje de error
                    JOptionPane.showMessageDialog(this, "[ X ] Ser " + k.getName() + " no se añadió correctamente", "Ser no creado", JOptionPane.ERROR_MESSAGE);
                
                    throw new SerException("[ X ] El ser " + k.getName() + " no es compatible con el planeta asignado");
                }
            }
        
        //FERENGI
            //si al darle a "save" el panel de ferengi es visible, almacenará esos datos
            if (ferengiBeing.isVisible()) {
                
                System.out.println("[createBeing] Ferengi seleccionado");
                
                //inicializaremos las variables:
                String name = nameBeing.getText();
                int gold = (int) OroBeing1.getValue();
                String planetName = (String) PlanetaBeing.getSelectedItem();
                
                //lo guardaremos y verificaremos si existe
                Planeta planetV = getPlanetByName(new Planeta(planetName));
                
                Ferengi f = new Ferengi(gold, name);
                
                System.out.println("[createBeing] entrada a validacion");
                
                // Revisaremos/verificaremos que el ser correspondiente se puede
                // crear correctamente
                if(Controlador.validateBeingAndPlanet(f, planetV)){
            
                    planetV.getPopulation().add(f);

                    System.out.println("[createBeing] validacion, correcta");
                    
                    //hacemos que salte el mensaje conforme se ha añadido correctamente
                    JOptionPane.showMessageDialog(this, "[ OK ] Ser " + f.getName() + " añadido correctamente", "Ser creado", JOptionPane.INFORMATION_MESSAGE);
                    
                    System.out.println("[createBeing] validacion, final");
                    
                } else{
                    
                    System.out.println("[createBeing] ser no creado, else");
                    
                    // SI no se puede crear, saltará un mensaje de error
                    JOptionPane.showMessageDialog(this, "[ X ] Ser " + f.getName() + " no se añadió correctamente", "Ser no creado", JOptionPane.ERROR_MESSAGE);
                
                    throw new SerException("[ X ] El ser " + f.getName() + " no es compatible con el planeta asignado");
                }
            }
        } catch (SerException e) {
            
            System.out.println("[createBeing] ser no creado, catch");
            
            //en caso de que funcione, saltará la excepción: 
            JOptionPane.showMessageDialog(this, e.getMessage(), "Registro ser", JOptionPane.INFORMATION_MESSAGE);
        }
        
        //Una vez finalizado todo, cerraremos la pestaña
        dispose();
    }//GEN-LAST:event_saveCreatePlanet2ActionPerformed
    
    /**
     * ----------------
     * MOSTRAR PANELES
     * ----------------
     * 
     * Haremos que cada botón visualice uno de los JPanels, de esta forma
     * habremos dividido todo y podremos evitar problemas futuros
     * 
     * @param evt 
     */
    private void humanButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_humanButtonActionPerformed
           
        //con setVisible indicamos si el elemento es visible o no
        humanoBeing.setVisible(true);
        humanButton.setBackground(new Color(204, 255, 204));
//-------------
        andorianoBeing.setVisible(false);
        vulcanianoBeing.setVisible(false);
        klingonBeing.setVisible(false);
        nibirianoBeing.setVisible(false);
        ferengiBeing.setVisible(false);
        
        andorianoButton.setBackground(new Color(240, 240, 240));
        vulcanianoButton.setBackground(new Color(240, 240, 240));
        klingonButton.setBackground(new Color(240, 240, 240));
        nibirianoButton.setBackground(new Color(240, 240, 240));
        ferengiButton.setBackground(new Color(240, 240, 240));
    }//GEN-LAST:event_humanButtonActionPerformed

    private void andorianoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_andorianoButtonActionPerformed

        //con setVisible indicamos si el elemento es visible o no
        andorianoBeing.setVisible(true);
        andorianoButton.setBackground(new Color(204, 255, 204));
//-------------
        humanoBeing.setVisible(false);
        vulcanianoBeing.setVisible(false);
        klingonBeing.setVisible(false);
        nibirianoBeing.setVisible(false);
        ferengiBeing.setVisible(false);
        
        humanButton.setBackground(new Color(240, 240, 240));
        vulcanianoButton.setBackground(new Color(240, 240, 240));
        klingonButton.setBackground(new Color(240, 240, 240));
        nibirianoButton.setBackground(new Color(240, 240, 240));
        ferengiButton.setBackground(new Color(240, 240, 240));
    }//GEN-LAST:event_andorianoButtonActionPerformed

    private void vulcanianoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vulcanianoButtonActionPerformed

        //con setVisible indicamos si el elemento es visible o no
        vulcanianoBeing.setVisible(true);
        vulcanianoButton.setBackground(new Color(204, 255, 204));
//-------------
        humanoBeing.setVisible(false);
        andorianoBeing.setVisible(false);
        klingonBeing.setVisible(false);
        nibirianoBeing.setVisible(false);
        ferengiBeing.setVisible(false);

        humanButton.setBackground(new Color(240, 240, 240));
        andorianoButton.setBackground(new Color(240, 240, 240));
        klingonButton.setBackground(new Color(240, 240, 240));
        nibirianoButton.setBackground(new Color(240, 240, 240));
        ferengiButton.setBackground(new Color(240, 240, 240));
    }//GEN-LAST:event_vulcanianoButtonActionPerformed

    private void klingonButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_klingonButtonActionPerformed
        
        //con setVisible indicamos si el elemento es visible o no
        klingonBeing.setVisible(true);
        klingonButton.setBackground(new Color(204, 255, 204));
//-------------
        humanoBeing.setVisible(false);
        andorianoBeing.setVisible(false);
        vulcanianoBeing.setVisible(false);
        nibirianoBeing.setVisible(false);
        ferengiBeing.setVisible(false);
        
        humanButton.setBackground(new Color(240, 240, 240));
        andorianoButton.setBackground(new Color(240, 240, 240));
        vulcanianoButton.setBackground(new Color(240, 240, 240));
        nibirianoButton.setBackground(new Color(240, 240, 240));
        ferengiButton.setBackground(new Color(240, 240, 240));
    }//GEN-LAST:event_klingonButtonActionPerformed

    private void nibirianoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nibirianoButtonActionPerformed
        
        //con setVisible indicamos si el elemento es visible o no
        nibirianoBeing.setVisible(true);
        nibirianoButton.setBackground(new Color(204, 255, 204));
//-------------              
        humanoBeing.setVisible(false);
        andorianoBeing.setVisible(false);
        vulcanianoBeing.setVisible(false);
        klingonBeing.setVisible(false);
        ferengiBeing.setVisible(false);
        
        humanButton.setBackground(new Color(240, 240, 240));
        andorianoButton.setBackground(new Color(240, 240, 240));
        vulcanianoButton.setBackground(new Color(240, 240, 240));
        klingonButton.setBackground(new Color(240, 240, 240));
        ferengiButton.setBackground(new Color(240, 240, 240));
    }//GEN-LAST:event_nibirianoButtonActionPerformed

    private void ferengiButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ferengiButtonActionPerformed
        
        //con setVisible indicamos si el elemento es visible o no
        ferengiBeing.setVisible(true);
        ferengiButton.setBackground(new Color(204, 255, 204));
//-------------
        humanoBeing.setVisible(false);
        andorianoBeing.setVisible(false);
        vulcanianoBeing.setVisible(false);
        klingonBeing.setVisible(false);
        nibirianoBeing.setVisible(false);
        
        humanButton.setBackground(new Color(240, 240, 240));
        andorianoButton.setBackground(new Color(240, 240, 240));
        vulcanianoButton.setBackground(new Color(240, 240, 240));
        klingonButton.setBackground(new Color(240, 240, 240));
        nibirianoButton.setBackground(new Color(240, 240, 240));
    }//GEN-LAST:event_ferengiButtonActionPerformed

    private void PlanetaBeingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PlanetaBeingActionPerformed
        
    }//GEN-LAST:event_PlanetaBeingActionPerformed

    /**
     * -----------------------------------
     * RELLENAR COMBOBOX AUTOMATICAMENTE
     * -----------------------------------
     * 
     * Crearemos un formWindowGainedFocus -> esto hará que siempre que se abra
     * createBeing, el comboBox de planeta se rellenará automáticamente
     * 
     * @param evt 
     */
    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus

        // Limpiamos el ComboBox antes de agregar los elementos
        PlanetaBeing.removeAllItems();

        // Obtenemos la lista de planetas desde el controlador
        Controlador.getAllPlanet();
            
        // Llenamos el JComboBox con los nombres de los planetas
        for (Planeta p : Controlador.getAllPlanet()) {

            PlanetaBeing.addItem(p.getName());
        }  
    }//GEN-LAST:event_formWindowGainedFocus
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(createBeing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(createBeing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(createBeing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(createBeing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                createBeing dialog = new createBeing(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> AlimentacionBeing;
    private javax.swing.JSpinner EdadBeing;
    private javax.swing.JSpinner FuerzaBeing;
    private javax.swing.JComboBox<String> GeneroBeing1;
    private javax.swing.JSpinner MeditacionBeing2;
    private javax.swing.JSpinner OroBeing1;
    private javax.swing.JComboBox<String> PlanetaBeing;
    private javax.swing.JRadioButton PolosBeing1;
    private javax.swing.JComboBox<String> RangoBeing;
    private javax.swing.JPanel andorianoBeing;
    private javax.swing.JButton andorianoButton;
    private javax.swing.JButton cancelCreateBeing;
    private javax.swing.JPanel ferengiBeing;
    private javax.swing.JButton ferengiButton;
    private javax.swing.JButton humanButton;
    private javax.swing.JPanel humanoBeing;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel klingonBeing;
    private javax.swing.JButton klingonButton;
    private javax.swing.JTextField nameBeing;
    private javax.swing.JPanel nibirianoBeing;
    private javax.swing.JButton nibirianoButton;
    private javax.swing.JButton saveCreatePlanet2;
    private javax.swing.JLabel text1;
    private javax.swing.JLabel text10;
    private javax.swing.JLabel text11;
    private javax.swing.JLabel text12;
    private javax.swing.JLabel text16;
    private javax.swing.JLabel text17;
    private javax.swing.JLabel text18;
    private javax.swing.JLabel text19;
    private javax.swing.JLabel text20;
    private javax.swing.JLabel text21;
    private javax.swing.JLabel text22;
    private javax.swing.JLabel text23;
    private javax.swing.JLabel text24;
    private javax.swing.JLabel text25;
    private javax.swing.JLabel text3;
    private javax.swing.JLabel text4;
    private javax.swing.JLabel text6;
    private javax.swing.JLabel text8;
    private javax.swing.JLabel text9;
    private javax.swing.JPanel vulcanianoBeing;
    private javax.swing.JButton vulcanianoButton;
    // End of variables declaration//GEN-END:variables
}
